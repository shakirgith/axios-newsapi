{"ast":null,"code":"var _jsxFileName = \"/Users/webcontxt/Desktop/Shakir/myReact/testing/src/components/Newsapi.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Loading from '../components/Loading';\nimport MyNews from '../components/News';\nimport Pagination from '../components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Newsapi = () => {\n  _s();\n\n  //   const [articles, setArticles] = useState([]);\n  //   const [loading, setLoading] = useState(true);\n  //   const getUsers = async () => {\n  //       try {\n  //           const response = await fetch('https://newsapi.org/v2/top-headlines?country=in&apiKey=e901d5b623f848939ad3692073bfd152');\n  //            setLoading(false);\n  //            setArticles(await response.json());\n  //       } catch (error) {\n  //           setLoading(false);\n  //           // console.log(\"my error is \"+ error);\n  //          console.log(articles);\n  //       }\n  //   }\n  // useEffect(() => {\n  //     getUsers();\n  // }, []);\n  // if (loading) {\n  //     return <Loading />\n  // }\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [newsPerPage] = useState(8);\n\n  const fetchNews = () => {\n    axios.get('https://newsapi.org/v2/top-headlines?country=us&apiKey=e901d5b623f848939ad3692073bfd152').then(response => {\n      //console.log(response);\n      setLoading(false);\n      setNews(response.data.articles);\n    }).catch(error => {\n      setLoading(true);\n      console.log(\"my error is \" + error);\n    });\n  };\n\n  useEffect(() => {\n    fetchNews();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  } // Get current posts\n\n\n  const indexOfLastNews = currentPage * newsPerPage;\n  const indexOfFirstNews = indexOfLastNews - newsPerPage;\n  const currentNews = news.slice(indexOfFirstNews, indexOfLastNews); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MyNews, {\n      news: currentNews\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      newsPerPage: newsPerPage,\n      totalNews: news.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Newsapi, \"dgHCKB/dsox/moTcO9y25VI9Yvs=\");\n\n_c = Newsapi;\nexport default Newsapi;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newsapi\");","map":{"version":3,"sources":["/Users/webcontxt/Desktop/Shakir/myReact/testing/src/components/Newsapi.jsx"],"names":["React","useState","useEffect","axios","Loading","MyNews","Pagination","Newsapi","news","setNews","loading","setLoading","currentPage","setCurrentPage","newsPerPage","fetchNews","get","then","response","data","articles","catch","error","console","log","indexOfLastNews","indexOfFirstNews","currentNews","slice","paginate","pageNumber","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEtB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAGI,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACa,WAAD,IAAgBb,QAAQ,CAAC,CAAD,CAA9B;;AAEE,QAAMc,SAAS,GAAG,MAAM;AAEtBZ,IAAAA,KAAK,CAACa,GAAN,CAAU,yFAAV,EACCC,IADD,CACOC,QAAD,IAAc;AACpB;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,OAAO,CAACS,QAAQ,CAACC,IAAT,CAAcC,QAAf,CAAP;AACC,KALD,EAOCC,KAPD,CAOOC,KAAK,IAAI;AACZX,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAgBF,KAA5B;AAEH,KAXD;AAaH,GAfC;;AAiBNpB,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAKA,MAAIL,OAAJ,EAAa;AACT,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GA1DqB,CA4DpB;;;AACA,QAAMe,eAAe,GAAGb,WAAW,GAAGE,WAAtC;AACA,QAAMY,gBAAgB,GAAGD,eAAe,GAAGX,WAA3C;AACA,QAAMa,WAAW,GAAGnB,IAAI,CAACoB,KAAL,CAAWF,gBAAX,EAA6BD,eAA7B,CAApB,CA/DoB,CAiEpB;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIjB,cAAc,CAACiB,UAAD,CAA7C;;AAKE,sBAEM;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEH;AAAd;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEb,WAAzB;AAAsC,MAAA,SAAS,EAAEN,IAAI,CAACuB,MAAtD;AAA8D,MAAA,QAAQ,EAAEF;AAAxE;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBAFN;AAOC,CA9EL;;GAAMtB,O;;KAAAA,O;AAgFN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Loading from '../components/Loading';\nimport MyNews from '../components/News';\nimport Pagination from '../components/Pagination';\n\n\nconst Newsapi = () => {\n\n//   const [articles, setArticles] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   const getUsers = async () => {\n//       try {\n//           const response = await fetch('https://newsapi.org/v2/top-headlines?country=in&apiKey=e901d5b623f848939ad3692073bfd152');\n//            setLoading(false);\n//            setArticles(await response.json());\n//       } catch (error) {\n//           setLoading(false);\n//           // console.log(\"my error is \"+ error);\n//          console.log(articles);\n//       }\n\n//   }\n  \n\n\n// useEffect(() => {\n//     getUsers();\n// }, []);\n\n// if (loading) {\n//     return <Loading />\n// }\n\n\n    const [news, setNews] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [newsPerPage] = useState(8);\n\n      const fetchNews = () => {\n        \n        axios.get('https://newsapi.org/v2/top-headlines?country=us&apiKey=e901d5b623f848939ad3692073bfd152')\n        .then((response) => {\n        //console.log(response);\n        setLoading(false);\n        setNews(response.data.articles);\n        })\n       \n        .catch(error => {\n            setLoading(true);\n            console.log(\"my error is \"+ error);\n\n        })\n\n    }\n\nuseEffect(() => {\n    fetchNews();\n}, []);\n\n\nif (loading) {\n    return <Loading />\n}\n\n  // Get current posts\n  const indexOfLastNews = currentPage * newsPerPage;\n  const indexOfFirstNews = indexOfLastNews - newsPerPage;\n  const currentNews = news.slice(indexOfFirstNews, indexOfLastNews);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n\n\n\n    return (\n\n          <>\n          <MyNews news={currentNews} />\n          <Pagination newsPerPage={newsPerPage} totalNews={news.length} paginate={paginate} />\n          </>\n        )\n    }\n\nexport default Newsapi;\n\n\n"]},"metadata":{},"sourceType":"module"}