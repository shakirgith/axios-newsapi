{"ast":null,"code":"var _jsxFileName = \"/Users/webcontxt/Desktop/Shakir/myReact/testing/src/components/Newsapi.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Loading from '../components/Loading';\nimport MyNews from '../components/News';\nimport Pagination from '../components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Newsapi = () => {\n  _s();\n\n  //   const [articles, setArticles] = useState([]);\n  //   const [loading, setLoading] = useState(true);\n  //   const getUsers = async () => {\n  //       try {\n  //           const response = await fetch('https://newsapi.org/v2/top-headlines?country=in&apiKey=e901d5b623f848939ad3692073bfd152');\n  //            setLoading(false);\n  //            setArticles(await response.json());\n  //       } catch (error) {\n  //           setLoading(false);\n  //           // console.log(\"my error is \"+ error);\n  //          console.log(articles);\n  //       }\n  //   }\n  // useEffect(() => {\n  //     getUsers();\n  // }, []);\n  // if (loading) {\n  //     return <Loading />\n  // }\n  const [news, setNews] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchNews = () => {\n    axios.get('https://newsapi.org/v2/top-headlines?country=us&apiKey=e901d5b623f848939ad3692073bfd152').then(response => {\n      //console.log(response);\n      setLoading(false);\n      setNews(response.data.articles);\n    }).catch(error => {\n      setLoading(false);\n      console.log(\"my error is \" + error);\n    });\n  };\n\n  useEffect(() => {\n    fetchNews();\n  }, []); // Get current posts\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MyNews, {\n      news: news\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: posts.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Newsapi, \"F6yDZrO2rMZs5jzX1Q2MMfiqj9g=\");\n\n_c = Newsapi;\nexport default Newsapi;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newsapi\");","map":{"version":3,"sources":["/Users/webcontxt/Desktop/Shakir/myReact/testing/src/components/Newsapi.jsx"],"names":["React","useState","useEffect","axios","Loading","MyNews","Pagination","Newsapi","news","setNews","loading","setLoading","fetchNews","get","then","response","data","articles","catch","error","console","log","indexOfLastPost","currentPage","postsPerPage","indexOfFirstPost","currentPosts","posts","slice","paginate","pageNumber","setCurrentPage","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEtB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAGI,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;;AAEE,QAAMW,SAAS,GAAG,MAAM;AAEtBT,IAAAA,KAAK,CAACU,GAAN,CAAU,yFAAV,EACCC,IADD,CACOC,QAAD,IAAc;AACpB;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,OAAO,CAACM,QAAQ,CAACC,IAAT,CAAcC,QAAf,CAAP;AACC,KALD,EAOCC,KAPD,CAOOC,KAAK,IAAI;AACZR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAgBF,KAA5B;AAEH,KAXD;AAaH,GAfC;;AAiBNjB,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT,CAjDsB,CAuDpB;;AACA,QAAMU,eAAe,GAAGC,WAAW,GAAGC,YAAtC;AACA,QAAMC,gBAAgB,GAAGH,eAAe,GAAGE,YAA3C;AACA,QAAME,YAAY,GAAGC,KAAK,CAACC,KAAN,CAAYH,gBAAZ,EAA8BH,eAA9B,CAArB,CA1DoB,CA4DpB;;AACA,QAAMO,QAAQ,GAAGC,UAAU,IAAIC,cAAc,CAACD,UAAD,CAA7C;;AAIF,MAAIpB,OAAJ,EAAa;AACT,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAEG,sBAEM;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,UAAD;AACF,MAAA,YAAY,EAAEgB,YADZ;AAEF,MAAA,UAAU,EAAEG,KAAK,CAACK,MAFhB;AAGF,MAAA,QAAQ,EAAEH;AAHR;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBAFN;AAWC,CAhFL;;GAAMtB,O;;KAAAA,O;AAkFN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Loading from '../components/Loading';\nimport MyNews from '../components/News';\nimport Pagination from '../components/Pagination';\n\n\nconst Newsapi = () => {\n\n//   const [articles, setArticles] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   const getUsers = async () => {\n//       try {\n//           const response = await fetch('https://newsapi.org/v2/top-headlines?country=in&apiKey=e901d5b623f848939ad3692073bfd152');\n//            setLoading(false);\n//            setArticles(await response.json());\n//       } catch (error) {\n//           setLoading(false);\n//           // console.log(\"my error is \"+ error);\n//          console.log(articles);\n//       }\n\n//   }\n  \n\n\n// useEffect(() => {\n//     getUsers();\n// }, []);\n\n// if (loading) {\n//     return <Loading />\n// }\n\n\n    const [news, setNews] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n      const fetchNews = () => {\n        \n        axios.get('https://newsapi.org/v2/top-headlines?country=us&apiKey=e901d5b623f848939ad3692073bfd152')\n        .then((response) => {\n        //console.log(response);\n        setLoading(false);\n        setNews(response.data.articles);\n        })\n       \n        .catch(error => {\n            setLoading(false);\n            console.log(\"my error is \"+ error);\n\n        })\n\n    }\n\nuseEffect(() => {\n    fetchNews();\n}, []);\n\n\n\n  // Get current posts\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n\n\nif (loading) {\n    return <Loading />\n}\n\n    return (\n\n          <>\n          <MyNews news={news} />\n          <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        paginate={paginate}\n      />\n          </>\n        )\n    }\n\nexport default Newsapi;\n\n\n"]},"metadata":{},"sourceType":"module"}