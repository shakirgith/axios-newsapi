{"ast":null,"code":"var _jsxFileName = \"/Users/webcontxt/Desktop/Shakir/myReact/testing/src/components/authentication/login.jsx\";\n// import axios from 'axios';\nimport React, { useState } from \"react\";\nimport { Component } from \"react\"; // import { useDispatch } from \"react-redux\";\n// import { useHistory } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      password: ''\n    };\n  }\n\n  login() {\n    console.warn(this.state);\n    fetch(\"http: //localhost:3000/login?g=\" + this.state.name).then(data => {\n      data.json().then(resp => {\n        console.warn(\"resp\", resp);\n\n        if (resp.length > 0) {\n          localStorage.setItem('login', JSON.stringify(resp));\n          console.warn(this.props.history.push('list'));\n        } else {\n          alert(\"Pelase check username and password\");\n        }\n      });\n    });\n  } // const [userData, setUserData] = useState({ username: \"\", password: \"\" });\n  // const [errorMessage, setErrorMessage] = useState({ value: \"\" });\n  // const history = useHistory();\n  // console.log(\"auth\", localStorage.getItem(\"isAuthenticated\"));\n  // const handleInputChange = (e) => {\n  //   setUserData((prevState) => {\n  //     return {\n  //       ...prevState,\n  //       [e.target.name]: e.target.value,\n  //     };\n  //   });\n  // };\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   //if username or password field is empty, return error message\n  //   if (userData.username === \"\" || userData.password === \"\") {\n  //     setErrorMessage((prevState) => ({\n  //       value: \"Empty username/password field\",\n  //     }));\n  //   } else if (userData.username == \"admin\" && userData.password == \"123456\") {\n  //     //Signin Success\n  //     localStorage.setItem(\"isAuthenticated\", \"true\");\n  //     window.location.pathname = \"/\";\n  //   } else {\n  //     //If credentials entered is invalid\n  //     setErrorMessage((prevState) => ({ value: \"Invalid username/password\" }));\n  //   }\n  // };\n\n\n  render() {\n    var _s = $RefreshSig$(),\n        _s2 = $RefreshSig$();\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"login\",\n      className: \"container m-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 m-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"uname\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"text\",\n            placeholder: \"Enter Username\",\n            name: \"user\",\n            onChange: _s(event => {\n              _s();\n\n              return this.useState({\n                name: event.target.value\n              });\n            }, \"QLMdH0jI21eljjizM/tMsYHCIuM=\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"psw\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            name: \"password\",\n            onChange: _s2(event => {\n              _s2();\n\n              return this.useState({\n                password: event.target.value\n              });\n            }, \"PS7Xcq9RuHb/XaBeso0ua0AuK4s=\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: () => {\n              this.login();\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/webcontxt/Desktop/Shakir/myReact/testing/src/components/authentication/login.jsx"],"names":["React","useState","Component","Login","constructor","state","name","password","login","console","warn","fetch","then","data","json","resp","length","localStorage","setItem","JSON","stringify","props","history","push","alert","render","event","target","value"],"mappings":"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","sourcesContent":["// import axios from 'axios';\nimport React, { useState } from \"react\";\nimport { Component } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { useHistory } from \"react-router-dom\";\n  \n\n\nclass Login extends Component {\n  constructor (){\n  super();\n    this.state = {\n      name: '',\n      password: ''\n    }\n}\n\nlogin() {\n  console.warn(this.state)\n  fetch(\"http: //localhost:3000/login?g=\" +   this.state.name).then((data) => {\n      data.json().then((resp)=> {\n        console.warn(\"resp\", resp)\n        if (resp.length > 0) {\n          localStorage.setItem('login',JSON.stringify(resp))\n          console.warn(this.props.history.push('list'))\n        }\n        else {\n        alert (\"Pelase check username and password\")\n      }\n    })\n  })\n}\n\n\n  // const [userData, setUserData] = useState({ username: \"\", password: \"\" });\n  // const [errorMessage, setErrorMessage] = useState({ value: \"\" });\n  // const history = useHistory();\n  // console.log(\"auth\", localStorage.getItem(\"isAuthenticated\"));\n\n  // const handleInputChange = (e) => {\n  //   setUserData((prevState) => {\n  //     return {\n  //       ...prevState,\n  //       [e.target.name]: e.target.value,\n  //     };\n  //   });\n  // };\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   //if username or password field is empty, return error message\n  //   if (userData.username === \"\" || userData.password === \"\") {\n  //     setErrorMessage((prevState) => ({\n  //       value: \"Empty username/password field\",\n  //     }));\n  //   } else if (userData.username == \"admin\" && userData.password == \"123456\") {\n  //     //Signin Success\n  //     localStorage.setItem(\"isAuthenticated\", \"true\");\n  //     window.location.pathname = \"/\";\n  //   } else {\n  //     //If credentials entered is invalid\n  //     setErrorMessage((prevState) => ({ value: \"Invalid username/password\" }));\n  //   }\n  // };\n\n  render () {\n  return (\n    \n    <div id=\"login\" className='container m-auto'>\n      <h2 className=\"text-center\">Login</h2>\n\n      <form>\n        \n        <div className=\"col-6 m-auto\">\n            <label for=\"uname\"><b>Username</b></label>\n            <input className=\"form-control\" type=\"text\" placeholder=\"Enter Username\" name=\"user\"  onChange={(event) => this.useState({name: event.target.value})}  />\n\n            <label for=\"psw\"><b>Password</b></label>\n            <input className=\"form-control\" type=\"password\" placeholder=\"Enter Password\" name=\"password\"    onChange={(event) => this.useState({password: event.target.value})}/>\n\n            <button type=\"submit\" onClick={() => {this.login()}}>Login</button>\n        </div>\n\n        {/* {errorMessage.value && (\n          <p className=\"text-danger\"> {errorMessage.value} </p>\n        )} */}\n        </form>\n     \n    </div>\n  )\n}\n}\nexport default Login"]},"metadata":{},"sourceType":"module"}